package org.geomatics.gv;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.geomatics.geom.Geom;
import org.geomatics.geom.Linearizer;
import org.geomatics.geom.Rect;
import org.geomatics.gv.model.LayerModel;
import org.geomatics.gv.model.LayerViewModel;
import org.geomatics.gv.service.GeomViewerService;
import org.geomatics.gv.service.GeomViewerService.GeomViewerListener;
import org.geomatics.util.Tolerance;
import org.geomatics.util.ViewPoint;

/**
 *
 * @author tofarrell
 */
public class BufferDialog extends javax.swing.JDialog {

    private GeomViewerService service;
    
    /**
     * Creates new form BufferDialog
     */
    public BufferDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public GeomViewerService getService() {
        return service;
    }

    public void setService(GeomViewerService service) {
        if(this.service == service){
            return;
        }
        if(this.service != null){
            this.service.removeListener(listener);
        }
        service.addListener(listener);
        firePropertyChange(GeomViewerFrame.SERVICE, service, this.service = service);
        updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel bufferAmtLabel = new javax.swing.JLabel();
        bufferAmt = new javax.swing.JTextField();
        inputLayer = new javax.swing.JComboBox<>();
        javax.swing.JLabel inputLayerLabel = new javax.swing.JLabel();
        outputLayer = new javax.swing.JComboBox<>();
        javax.swing.JLabel outputLayerLabel = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buffer");

        bufferAmtLabel.setText("Amount");

        bufferAmt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        bufferAmt.setText("1");

        inputLayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        inputLayerLabel.setText("Input Layer");

        outputLayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        outputLayerLabel.setText("Output Layer");

        okBtn.setText("OK");
        okBtn.setMaximumSize(new java.awt.Dimension(80, 23));
        okBtn.setMinimumSize(new java.awt.Dimension(80, 23));
        okBtn.setPreferredSize(new java.awt.Dimension(80, 23));
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });
        jPanel1.add(okBtn);

        cancelBtn.setText("Cancel");
        cancelBtn.setMaximumSize(new java.awt.Dimension(80, 23));
        cancelBtn.setMinimumSize(new java.awt.Dimension(80, 23));
        cancelBtn.setPreferredSize(new java.awt.Dimension(80, 23));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel1.add(cancelBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bufferAmtLabel)
                            .addComponent(inputLayerLabel)
                            .addComponent(outputLayerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(outputLayer, 0, 180, Short.MAX_VALUE)
                            .addComponent(inputLayer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bufferAmt))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bufferAmtLabel)
                    .addComponent(bufferAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLayerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputLayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputLayerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        double buffer;
        try{
            buffer = Double.parseDouble(bufferAmt.getText());
        }catch(NumberFormatException ex){
            buffer = Double.NaN;
        }
        if(Double.isNaN(buffer) || Double.isInfinite(buffer)){
            JOptionPane.showMessageDialog(this, "Invalid buffer amount!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int inIndex = inputLayer.getSelectedIndex();
        if(inIndex < 0){
            JOptionPane.showMessageDialog(this, "No input layer selected!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        LayerViewModel inLayerView = service.getLayerView(inIndex);
        Geom geom = inLayerView.layer.geom.buffer(buffer, Linearizer.DEFAULT, Tolerance.DEFAULT);
            
        int outIndex = outputLayer.getSelectedIndex();
        if(outIndex > 0){
            outIndex--;
            LayerViewModel outLayerView = service.getLayerView(outIndex);
            LayerModel layer = outLayerView.layer;
            layer = new LayerModel(layer.title, geom, layer.fill, layer.outlineFill, layer.outline, layer.symbol);
            service.setLayerView(outIndex, layer);
        }else{ // new layer
            LayerModel layer = LayerModel.DEFAULT;
            layer = new LayerModel("New Layer "+service.numLayers(), geom, layer.fill, layer.outlineFill, layer.outline, layer.symbol);
            service.addLayerView(layer);
        }
        setVisible(false);
    }//GEN-LAST:event_okBtnActionPerformed

    private void updateUI(){
        int numLayers = service.numLayers();
        String[] inputLayers = new String[numLayers];
        String[] outputLayers = new String[numLayers+1];
        outputLayers[0] = "New Layer";
        for(int i = 0; i < numLayers; i++){
            LayerViewModel layerView = service.getLayerView(i);
            LayerModel layer = layerView.layer;
            String layerName = (layer == null) ? layerView.path : layer.title;
            inputLayers[i] = layerName;
            outputLayers[i+1] = layerName;
        }
        inputLayer.setModel(new DefaultComboBoxModel(inputLayers));
        outputLayer.setModel(new DefaultComboBoxModel(outputLayers));  
    }
    
    private final GeomViewerListener listener = new GeomViewerListener(){
        @Override
        public void onViewUpdate(Rect bounds, ViewPoint viewPoint) {
            updateUI();
        }

        @Override
        public void onLayerUpdate(int index, LayerViewModel layer) {
            updateUI();
        }

        @Override
        public void onError(Exception ex) {
        }

        @Override
        public void onClose() {
        }
        
    };
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bufferAmt;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> inputLayer;
    private javax.swing.JButton okBtn;
    private javax.swing.JComboBox<String> outputLayer;
    // End of variables declaration//GEN-END:variables
}
