package org.geomatics.gv;

import javax.swing.DefaultComboBoxModel;
import org.geomatics.geom.Geom;
import org.geomatics.geom.Linearizer;
import org.geomatics.geom.Rect;
import org.geomatics.gv.model.LayerModel;
import org.geomatics.gv.model.LayerViewModel;
import org.geomatics.gv.service.GeomViewerService;
import org.geomatics.util.Tolerance;
import org.geomatics.util.ViewPoint;

/**
 *
 * @author tofarrell
 */
public class CombineDialog extends javax.swing.JDialog {

    private GeomViewerService service;

    /**
     * Creates new form CombineDialog
     */
    public CombineDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public GeomViewerService getService() {
        return service;
    }

    public void setService(GeomViewerService service) {
        if (this.service == service) {
            return;
        }
        if (this.service != null) {
            this.service.removeListener(listener);
        }
        service.addListener(listener);
        firePropertyChange(GeomViewerFrame.SERVICE, service, this.service = service);
        updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel layerALabel = new javax.swing.JLabel();
        layerA = new javax.swing.JComboBox<>();
        javax.swing.JLabel layerBLabel = new javax.swing.JLabel();
        layerB = new javax.swing.JComboBox<>();
        javax.swing.JLabel operationLabel = new javax.swing.JLabel();
        operation = new javax.swing.JComboBox<>();
        javax.swing.JLabel outputLabel = new javax.swing.JLabel();
        output = new javax.swing.JComboBox<>();
        javax.swing.JPanel btnPanel = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Combine");

        layerALabel.setLabelFor(layerA);
        layerALabel.setText("Layer A");

        layerA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        layerBLabel.setLabelFor(layerB);
        layerBLabel.setText("Layer B");

        layerB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        operationLabel.setText("Operation");

        operation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Union", "Intersection", "Less", "XOR" }));

        outputLabel.setText("Output Layer");

        output.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        okBtn.setText("OK");
        okBtn.setPreferredSize(new java.awt.Dimension(80, 23));
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });
        btnPanel.add(okBtn);

        cancelBtn.setText("Cancel");
        cancelBtn.setPreferredSize(new java.awt.Dimension(80, 23));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        btnPanel.add(cancelBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(layerALabel)
                            .addComponent(layerBLabel)
                            .addComponent(operationLabel)
                            .addComponent(outputLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(output, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(operation, 0, 180, Short.MAX_VALUE)
                            .addComponent(layerB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(layerA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(layerA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(layerALabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(layerB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(layerBLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(operation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        Geom a = service.getLayerView(layerA.getSelectedIndex()).layer.geom;
        Geom b = service.getLayerView(layerB.getSelectedIndex()).layer.geom;
        Geom c = null;
        switch(operation.getSelectedItem().toString()){
            case "Union":
                c = a.union(b, Linearizer.DEFAULT, Tolerance.DEFAULT);
                break;
            case "Intersection":
                c = a.intersection(b, Linearizer.DEFAULT, Tolerance.DEFAULT);
                break;
            case "XOR":
                c = a.xor(b, Linearizer.DEFAULT, Tolerance.DEFAULT);
                break;
            case "Less":
                c = a.less(b, Linearizer.DEFAULT, Tolerance.DEFAULT);
                break;
        }
        int outIndex = output.getSelectedIndex();
        if(outIndex > 0){
            outIndex--;
            LayerViewModel outLayerView = service.getLayerView(outIndex);
            LayerModel layer = outLayerView.layer;
            layer = new LayerModel(layer.title, c, layer.fill, layer.outlineFill, layer.outline, layer.symbol);
            service.setLayerView(outIndex, layer);
        }else{ // new layer
            LayerModel layer = LayerModel.DEFAULT;
            layer = new LayerModel("New Layer "+service.numLayers(), c, layer.fill, layer.outlineFill, layer.outline, layer.symbol);
            service.addLayerView(layer);
        }
        setVisible(false);
    }//GEN-LAST:event_okBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void updateUI() {
        int numLayers = service.numLayers();
        String[] inputLayers = new String[numLayers];
        String[] outputLayers = new String[numLayers + 1];
        outputLayers[0] = "New Layer";
        for (int i = 0; i < numLayers; i++) {
            LayerViewModel layerView = service.getLayerView(i);
            LayerModel layer = layerView.layer;
            String layerName = (layer == null) ? layerView.path : layer.title;
            inputLayers[i] = layerName;
            outputLayers[i + 1] = layerName;
        }
        layerA.setModel(new DefaultComboBoxModel(inputLayers));
        layerB.setModel(new DefaultComboBoxModel(inputLayers));
        output.setModel(new DefaultComboBoxModel(outputLayers));
    }

    private final GeomViewerService.GeomViewerListener listener = new GeomViewerService.GeomViewerListener() {
        @Override
        public void onViewUpdate(Rect bounds, ViewPoint viewPoint) {
            updateUI();
        }

        @Override
        public void onLayerUpdate(int index, LayerViewModel layer) {
            updateUI();
        }

        @Override
        public void onError(Exception ex) {
        }

        @Override
        public void onClose() {
        }

    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> layerA;
    private javax.swing.JComboBox<String> layerB;
    private javax.swing.JButton okBtn;
    private javax.swing.JComboBox<String> operation;
    private javax.swing.JComboBox<String> output;
    // End of variables declaration//GEN-END:variables
}
